define('lib/jquery_ext', function(require, exports, module){ // Generated by CoffeeScript 1.8.0
var _error_tiper;

$.txt2html = function(txt) {
  var i, r, _i, _len, _ref;
  r = [];
  _ref = txt.replace(/\r\n/g, "\n").replace(/\r/g, "\n").split("\n");
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    i = _ref[_i];
    r.push($.escape(i));
  }
  return "<p>" + (r.join("</p><p>")) + "</p>";
};

window.devicePixelRatio = window.devicePixelRatio || 1;

$.extend({
  escape: function(txt) {
    return $('<div/>').text(txt).html();
  }
});

$(document).ajaxError(function() {
  return $.modal_alert('<h1><p>出错了 !</p><p><a href=".">点此这里</a> 刷新页面试试？</p></h1>');
});

_error_tiper = function(elem) {
  return {
    set: function(txt) {
      return elem.addClass('error');
    },
    reset: function() {
      return elem.removeClass('error');
    }
  };
};

$.error_tip = function(o, focus) {
  var elem, kv;
  if (focus == null) {
    focus = 1;
  }
  elem = $(o);
  if (!elem[0]) {
    return;
  }
  kv = [];
  return {
    reset: function() {
      var i, _i, _len;
      for (_i = 0, _len = kv.length; _i < _len; _i++) {
        i = kv[_i];
        i.reset();
      }
      return kv = [];
    },
    set: function(o) {
      var count, event, explain, i, input, k, t, tiper, type, v, _i, _len, _ref;
      this.reset();
      count = 0;
      for (k in o) {
        v = o[k];
        count += 1;
        t = elem.find("[name=" + k + "]");
        if (!t[0]) {
          console.log("[name=" + k + "] NOT FOUND ! ERROR " + v);
          continue;
        }
        explain = t.parents('.field');
        if (explain.length) {
          tiper = _error_tiper(explain);
        } else {
          console.log("[name=" + k + "] parents feild NOT FOUND ! ERROR " + v);
          continue;
        }
        if (t[0].tagName === "INPUT" || t[0].tagName === "SELECT") {
          if (t[0].type === "checkbox") {
            event = "change";
          } else {
            event = "keydown";
          }
          t[0]._tiper = tiper;
          t.bind("" + event + ".error", function() {
            this._tiper.reset();
            return $(this).unbind("" + event + ".error");
          });
        }
        tiper.set(v);
        kv.push(tiper);
        if (focus) {
          _ref = elem.find('.error');
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            i = _ref[_i];
            input = $(i).find('input');
            if (input[0]) {
              type = input[0].type;
              if (type !== "checkbox" && type !== "radio") {
                input.focus();
                break;
              }
            }
          }
        }
      }
      return count;
    }
  };
};

//# sourceMappingURL=jquery_ext.js.map
 
});