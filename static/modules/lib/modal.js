define('lib/modal', function(require, exports, module){ // Generated by CoffeeScript 1.8.0
$.modal_alert = function(html, option) {
  if (option == null) {
    option = {};
  }
  if (html.indexOf("<") === -1) {
    html = "<h1>" + ($.txt2html(html)) + "</h1>";
  }
  option.closable = option.closable || false;
  return $.modal("<div class=\"ui basic modal\">" + html + "<div class=\"actions\">\n<div class=\"one fluid ui inverted buttons\">\n<div class=\"ui green ok basic inverted button\">\n<i class=\"checkmark icon\"></i>\n我知道了\n</div>\n</div>\n</div>\n</div>", option);
};

$.modal = function(html, option, id, callback) {
  var dbg, elem, onHidden, real, show, ui;
  if (id) {
    html = $("<div class=\"ui basic modal\" style=\"height:100%;\">" + html + "</div>");
    html.attr("ms-view", id);
  }
  option = option || {};
  option.transition = option.transition || "horizontal flip";
  real = option.onHidden;
  onHidden = function() {
    $(this.parentNode).remove();
    if (id && V[id]) {
      return delete V[id];
    }
  };
  if (real) {
    option.onHidden = function() {
      real.apply(this);
      return onHidden.apply(this);
    };
  } else {
    option.onHidden = onHidden;
  }
  elem = $(html);
  show = function() {
    var o, r, view;
    elem.modal(option).modal('show');
    if (id && callback) {
      r = callback(elem);
      if ($.isArray(r)) {
        o = r[0], view = r[1];
      } else {
        o = r;
        view = void 0;
      }
      return View(id, o, view);
    }
  };
  if (!option.allowMultiple) {
    dbg = "<div class=\"ui dimmer modals page transition visible active " + (option.dimmerClassName || '') + "\">";
    $('body').prepend(dbg);
    ui = $(".ui.modal");
    if (ui.length) {
      return ui.modal('hide all', function() {
        return show();
      });
    } else {
      return show();
    }
  }
};

//# sourceMappingURL=modal.js.map
 
});